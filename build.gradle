// vim: set ft=groovy:
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// *
// *              C E D A R
// *          S O L U T I O N S       "Software done right."
// *           S O F T W A R E
// *
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// *
// * Copyright (c) 2013-2014 Kenneth J. Pronovici.
// * All rights reserved.
// *
// * This program is free software; you can redistribute it and/or
// * modify it under the terms of the Apache License, Version 2.0.
// * See LICENSE for more information about the licensing terms.
// *
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// *
// * Author   : Kenneth J. Pronovici <pronovic@ieee.org>
// * Language : Gradle (>= 1.7)
// * Project  : Common Dependencies
// *
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

// ***************
// * Gradle setup
// ***************

// Sources for the build script itself
buildscript {
   repositories {
      mavenCentral()
      mavenLocal()   // Local Maven repository
      maven { url "http://maven.cedar-common.googlecode.com/hg/maven/" }   // Cedar Common code
   }

   dependencies {
      classpath "com.googlecode.cedar-common:cedar-build:0.8.9"
   }
}

// Plugins
apply plugin: "base"
apply plugin: "cedarBuild"

// Load properties from standard configuration files (build.properties and local.properties)
cedarProperties.loadStandardProperties()


// ************************
// * Project configuration
// ************************

// Configuration for digital signatures
cedarSigning {
   gpgKeyId = config_gpgKeyId
   gpgSecretKey = config_gpgSecretKey
   projects = allprojects
} 

// Common setup for subprojects
subprojects {
   apply plugin: "java"
   apply plugin: "cedarPublish"

   group = "com.googlecode.cedar-common"
   buildDir = { "../build/${project.name}" }

   signing {
      required = { cedarPublish.isSignatureRequired() }
      sign jar
   }

   cedarPublish {
      mercurialMavenProject = config_mercurialMavenProject
   }
   
   uploadArchives {
       repositories {
           mavenDeployer {
               repository(url: cedarPublish.getPublishRepositoryUrl())
               beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) } 
           }
       }
   }

   install { 
   }

   // "generate" the jars by copying what's checked into revision control
   task generateJars(type: Copy) {
      outputs.upToDateWhen { false }
      from(file("."))
      into(file(buildDir.canonicalPath + "/libs").canonicalPath)
      include({ "${project.name}-${version}.jar" })
      include({ "${project.name}-${version}-sources.jar" })
      include({ "${project.name}-${version}-javadoc.jar" })
   }

   // this tricks gradle into generating the jar by executing generateJars
   task sourcesJar(type: Jar, dependsOn: generateJars) { 
      classifier = 'sources' 
      enabled = false
   } 

   // this tricks gradle into generating the jar by executing generateJars
   task javadocJar(type: Jar, dependsOn: generateJars) { 
      classifier = 'javadoc' 
      enabled = false
   }

   // this tricks gradle into generating the jar by executing generateJars
   tasks.jar.dependsOn(generateJars)
   jar.enabled = false

   // force the signJar task to run every time, even if it thinks it's up-to-date
   tasks.matching { task -> task.name == "signJar" }.all {
      outputs.upToDateWhen { false }
   }

}

// Subproject for gwt-sl dependency
project(":gwt-sl") {

   // As of 2013, the obsolete version of GWT-SL that I want to use is not
   // available in any Maven repository.  

   version = "1.2"

   artifacts {
      jar
      archives sourcesJar
   }

   uploadArchives {
       repositories {
           mavenDeployer {
               pom.artifactId = "${project.name}"
               pom.version = "${version}"
               pom.project {
                  name "GWT Server Library (Repackaged)"
                  description "*** THIS IS AN OBSOLETE VERSION UPLOADED FOR USE WITH CEDAR-COMMON.*** " +
                              "The Server Library for GWT is a collection of Java server " +
                              "side components for the Google Web Toolkit AJAX framework " +
                              "with the focus on the Spring framework by facilitating " + 
                              "publishing of Spring beans as RPC services with support " +
                              "for Hibernate-managed entities."
                  url "https://code.google.com/p/gwt-sl/"
                  scm {
                     url "scm:https://code.google.com/p/cedar-common.dependencies/"
                     connection "scm:hg:https://code.google.com/p/cedar-common.dependencies/"
                     developerConnection "scm:hg:https://code.google.com/p/cedar-common.dependencies/"
                  }
                  licenses {
                     license {
                        name "The Apache Software License, Version 2.0"
                        url "http://www.apache.org/license/LICENSE-2.0.txt"
                        distribution "repo"
                     }
                  }
                  developers {
                     developer {
                        id "author"
                        name "George Georgovassilis"
                        email "g.georgovassilis@gmail.com"
                     }
                  }
               }
           }
       }
   }

}

// Subproject for cpsuite dependency
project(":cpsuite") {

   // As of 2013, cpsuite is not available in any Maven repository.

   version = "1.2.6"

   artifacts {
      jar
   }

   uploadArchives {
       repositories {
           mavenDeployer {
               pom.artifactId = "${project.name}"
               pom.version = "${version}"
               pom.project {
                  name "Classpath Suite (Repackaged)"
                  description "*** THIS VERSION UPLOADED FOR USE WITH CEDAR-COMMON.*** " +
                              "Dynamically generates JUnit4 test suites."
                  url "http://johanneslink.net/projects/cpsuite.jsp"
                  scm {
                     url "scm:https://code.google.com/p/cedar-common.dependencies/"
                     connection "scm:hg:https://code.google.com/p/cedar-common.dependencies/"
                     developerConnection "scm:hg:https://code.google.com/p/cedar-common.dependencies/"
                  }
                  licenses {
                     license {
                        name "The Apache Software License, Version 2.0"
                        url "http://www.apache.org/license/LICENSE-2.0.txt"
                        distribution "repo"
                     }
                  }
                  developers {
                     developer {
                        id "author"
                        name "Johannes Link"
                        email "business@johanneslink.net"
                     }
                  }
               }
           }
       }
   }

}

// Subproject for mvp4g dependency
project(":mvp4g") {

   // As of May 2014, I've been using this snapshot, but there hasn't been a
   // formal upstream release.  I'm not comfortable relying on a snapshot,
   // because other people using CedarCommon might unexpectedly end up with a
   // different version than me, and it might work a little differently.

   // Unfortunately, if I use the original version (1.5.0-20140501.220709-7),
   // Maven auto-detects that the file is a snapshot and generates a directory
   // 1.5.0-SNAPSHOT within the repository.  That's not what I want, so I have
   // to change the version.  I decided to add a suffix "-repackaged".

   // Taken from: http://mvp4g.googlecode.com/svn/maven2/snapshots/com/googlecode/mvp4g/mvp4g/1.5.0-SNAPSHOT/
   version = "1.5.0-20140501.220709-7-repackaged"

   artifacts {
      jar
      archives sourcesJar
      archives javadocJar
   }

   uploadArchives {
       repositories {
           mavenDeployer {
               pom.artifactId = "${project.name}"
               pom.version = "${version}"
               pom.project {
                  name "Mvp4g (Repackaged)"
                  description "*** THIS VERSION UPLOADED FOR USE WITH CEDAR-COMMON, TO AVOID SNAPSHOT DEPENDENCIES. *** " +
                              "Model View Presenter with Event Bus For GWT."
                  url "http://code.googlecode.com/p/mvp4g"

                  scm {
                     url "scm:svn:http://mvp4g.googlecode.com/svn"
                     connection "scm:svn:http://mvp4g.googlecode.com/svn"
                     developerConnection "scm:svn:http://mvp4g.googlecode.com/svn"
                  }

                  licenses {
                     license {
                        name "The Apache Software License, Version 2.0"
                        url "http://www.apache.org/license/LICENSE-2.0.txt"
                        distribution "repo"
                     }
                  }

                  developers {
                     developer {
                        id "developer"
                        name "Pierre-Laurent Coirier"
                     }
                     developer {
                        id "developer"
                        name "Frank Hossfeld"
                     }
                  }

                  contributors {
                     contributor {
                        name "Javier Sandino"
                     }
                     contributor {
                        name "Izzet Mustafayev"
                     }
                     contributor {
                        name "Nick Hebner"
                     }
                     contributor {
                        name "Harald Schilly"
                     }
                     contributor {
                        name "Lukasz Dywicky"
                     }
                     contributor {
                        name "Sergey Shvets"
                     }
                  }
               }
           }
       }
   }

}

